/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/forces/Disc.js":
/*!*******************************!*\
  !*** ./src/js/forces/Disc.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vmath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vmath.js */ \"./src/js/forces/vmath.js\");\n\n\nvar Disc = function (xi, yi, radius, xv, yv) {\n    var center, radius, vel, x, y, w, h;\n    this.center = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(xi, yi);\n    this.radius = radius;\n    this.vel = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(xv, yv);\n    //To be used with the quad tree, need the following available fields\n    this.x = this.center.i - radius; //Top Left\n    this.y = this.center.j - radius;\n    this.w = 2 * radius;\n    this.h = 2 * radius;\n};\nDisc.prototype = {\n    update: function (screenSize) {\n        //Check if hitting walls\n        //x\n        if (this.center.i + this.vel.i <= this.radius || this.center.i + this.radius + this.vel.i >= screenSize.x) {\n            this.vel.i = -1 * this.vel.i;\n        } else {\n            this.center.i += this.vel.i;\n        }\n        //y\n        if (this.center.j + this.vel.j <= this.radius || this.center.j + this.radius + this.vel.j >= screenSize.y) {\n            this.vel.j = -1 * this.vel.j;\n        } else {\n            this.center.j += this.vel.j;\n        }\n        //Update quad tree fields\n        this.x = this.center.i - this.radius;\n        this.y = this.center.j - this.radius;\n    },\n    setVel: function (a) {\n        this.vel.i = a.i;\n        this.vel.j = a.j;\n    },\n    setPos: function (a) {\n        this.center.i = a.i;\n        this.center.j = a.j;\n        this.x = a.i - this.radius;\n        this.y = a.j - this.radius;\n    },\n    energy: function () {\n        return Math.pow(this.vel.i, 2) + Math.pow(this.vel.j, 2);\n    },\n    draw: function (screen) {\n        screen.beginPath();\n        screen.arc(this.center.i, this.center.j, this.radius, 0, 2 * Math.PI, false);\n        screen.fillStyle = 'gray';\n        screen.fill();\n        screen.beginPath();\n        screen.arc(this.center.i, this.center.j, this.radius, 0, 2 * Math.PI, false);\n        screen.lineWidth = 2;\n        screen.strokeStyle = 'black';\n        screen.stroke();\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Disc);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/Disc.js?");

/***/ }),

/***/ "./src/js/forces/InputHandler.js":
/*!***************************************!*\
  !*** ./src/js/forces/InputHandler.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vmath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vmath.js */ \"./src/js/forces/vmath.js\");\n/* harmony import */ var _Disc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Disc.js */ \"./src/js/forces/Disc.js\");\n/* harmony import */ var _PointSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PointSource.js */ \"./src/js/forces/PointSource.js\");\n\n\n\n\nvar InputHandler = function (s) {\n    this.sim = s;\n    this.c = s.canvas;\n    this.rect = s.canvas.getBoundingClientRect();\n\n    this.addingDisc = true;\n    this.addingPoint = false;\n    \n    this.btn_disc  = document.getElementById('btn-disc');\n    this.btn_point = document.getElementById('btn-point');\n    this.btn_stats = document.getElementById('btn-stats');\n    this.btn_grid  = document.getElementById('btn-grid');\n    this.btn_clear = document.getElementById('btn-clear');\n\n    this.attachButtonListeners();\n\n    //Fields used by both during click events\n    this.addradius = 0;\n    this.addpower = 0;\n    this.addvelocity = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(0, 0);\n    this.addtimer = 0;\n    this.maxdiscradius = 20;\n    this.maxvelocity = 4.5;\n    this.velocityscale = 0.01;\n    this.maxpointradius = 85;\n    //Click control\n    this.clickloc = 0;\n    this.mouseloc = 0;\n    this.clicking = false;\n    this.moved = false;\n    this.sim.canvas.onmousedown = this.handleClick.bind(this);\n};\nInputHandler.prototype = {\n\n    attachButtonListeners: function(){\n    \tthis.btn_disc.addEventListener('click', function(){\n    \t\tthis.addingDisc = true;\n    \t\tthis.addingPoint = false;\n    \t}.bind(this));\n\n    \tthis.btn_point.addEventListener('click', function(){\n    \t\tthis.addingDisc = false;\n    \t\tthis.addingPoint = true;\n    \t}.bind(this));\n\n    \tthis.btn_stats.addEventListener('click', function(){\n    \t\tthis.toggleStats();\n    \t}.bind(this));\n\n    \tthis.btn_grid.addEventListener('click', function(){\n    \t\tthis.toggleGrid();\n    \t}.bind(this));\n\n    \tthis.btn_clear.addEventListener('click', function(){\n    \t\tthis.clrAll();\n    \t}.bind(this))\n    },\n\n    draw: function () {\n        if (this.clicking) {\n            if (this.addingPoint) {\n                this.draw_addPoint();\n            } else if (this.addingDisc) {\n                this.draw_addDisc();\n            }\n        }\n    },\n\n    draw_addPoint: function () {\n        //Draw circle of radius center to point\n        var screen = this.sim.screen;\n        screen.beginPath();\n        screen.arc(this.clickloc.i, this.clickloc.j, this.addradius, 0, 2 * Math.PI, false);\n        screen.lineWidth = 2;\n        screen.strokeStyle = 'black';\n        screen.stroke();\n    },\n\n    draw_addDisc: function () {\n        var screen = this.sim.screen;\n        //If havent moved draw circle\n        if (!this.moved) {\n            screen.beginPath();\n            screen.arc(this.clickloc.i, this.clickloc.j, this.addradius, 0, 2 * Math.PI, false);\n            screen.fillStyle = 'gray';\n            screen.fill();\n            screen.beginPath();\n            screen.arc(this.clickloc.i, this.clickloc.j, this.addradius, 0, 2 * Math.PI, false);\n            screen.lineWidth = 2;\n            screen.strokeStyle = 'black';\n            screen.stroke();\n        } else {\n            drawLine(screen, this.clickloc, this.mouseloc);\n            screen.beginPath();\n            screen.arc(this.clickloc.i, this.clickloc.j, this.addradius, 0, 2 * Math.PI, false);\n            screen.fillStyle = 'gray';\n            screen.fill();\n            screen.beginPath();\n            screen.arc(this.clickloc.i, this.clickloc.j, this.addradius, 0, 2 * Math.PI, false);\n            screen.lineWidth = 2;\n            screen.strokeStyle = 'black';\n            screen.stroke();\n        }\n\n\n    },\n    addDisc: function (event) {\n        var c = this.sim.canvas;\n        this.addradius = 6;\n        //Add interval timeout to increase disc size\n        var discSizeTimeout = setInterval(function () {\n            this.addradius += 2;\n        }.bind(this), 800);\n        //On mouse move - if the pointer leaves the circle, switch to\n        // velocity onmousemove\n        this.c.onmousemove = function (e) {\n            this.mouseloc = getMousePos( c, e );\n            var dist = Math.abs(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(this.clickloc, this.mouseloc)));\n            if (dist > this.addradius) {\n                //Clear the timeout callback/set move flag\n                clearInterval(discSizeTimeout);\n                this.moved = true;\n                //Add new onmousemove callback to track mouse position.\n                this.c.onmousemove = function (e) {\n                    this.mouseloc = getMousePos( c, e );\n                    //mouse = click+line\n                    //line = mouse-click\n                    var line = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(this.mouseloc, this.clickloc);\n                    this.addvelocity = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(line, this.velocityscale);\n                }.bind(this);\n                this.c.onmouseup = function (e) {\n                    if (this.addradius > 0) {\n                        this.sim.discs.push(new _Disc_js__WEBPACK_IMPORTED_MODULE_1__.default(this.clickloc.i, this.clickloc.j, this.addradius, this.addvelocity.i, this.addvelocity.j));\n                        console.log(\"Disc: (\" + this.clickloc.i + \", \" + this.clickloc.j + \"), \" + this.addradius + \", (\" + this.addvelocity.i + \", \" + this.addvelocity.j + \")\");\n                    }\n                    this.c.onmousemove = null;\n                    this.c.onmouseup = null;\n                    this.clicking = false;\n                    this.moved = false;\n                }.bind(this);\n            }\n        }.bind(this);\n        this.c.onmouseup = function (e) {\n            if (this.addradius > 0) {\n                this.sim.discs.push(new _Disc_js__WEBPACK_IMPORTED_MODULE_1__.default(this.clickloc.i, this.clickloc.j, this.addradius, this.addvelocity.i, this.addvelocity.j));\n                console.log(\"Disc: (\" + this.clickloc.i + \", \" + this.clickloc.j + \"), \" + this.addradius + \", (\" + this.addvelocity.i + \", \" + this.addvelocity.j + \")\");\n            }\n            this.c.onmousemove = null;\n            this.c.onmouseup = null;\n            this.clicking = false;\n            this.moved = false;\n            clearInterval(discSizeTimeout );\n        }.bind(this);\n    },\n    addPoint: function (event) {\n        this.c.onmousemove = function (e) {\n            this.mouseloc = getMousePos( this.c, e );\n            var dist = Math.abs(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(this.clickloc, this.mouseloc)));\n            dist = (dist < this.maxpointradius) ? dist : this.maxpointradius;\n            this.addradius = dist;\n        }.bind(this);\n        this.c.onmouseup = function (e) {\n            //xi, yi, radius, power\n            if (this.addradius > 0) {\n                this.sim.points.push(new _PointSource_js__WEBPACK_IMPORTED_MODULE_2__.default(this.clickloc.i, this.clickloc.j, this.addradius, this.addradius / 40));\n                console.log(\"Point: (\" + this.clickloc.i + \", \" + this.clickloc.j + \"), \" + this.addradius + \", \" + this.addradius / 40);\n            }\n            //Reset stuff\n            this.c.onmousemove = null;\n            this.c.onmouseup = null;\n            this.clicking = false;\n        }.bind(this);\n    },\n    clrAll: function () {\n        this.sim.discs = [];\n        this.sim.points = [];\n    },\n    toggleBold: function (ele) {\n        var style = ele.style;\n        if (style.fontWeight == \"\") {\n            style.fontWeight = \"bold\";\n        } else {\n            style.fontWeight = \"\";\n        }\n    },\n    toggleGrid: function () {\n        this.sim.showGrid = !this.sim.showGrid;\n    },\n    toggleStats: function () {\n        this.sim.drawInfo = !this.sim.drawInfo;\n    },\n    // record: function () {\n    //     if (!this.sim.recording) {\n    //         this.sim.gif.startRecording();\n    //         this.sim.recording = true;\n    //         //Change Style of Button to light red background\n    //     } else {\n    //         this.sim.gif.stopRecording();\n    //         this.sim.recording = true;\n    //         //Change style of Button back to white background\n    //     }\n    // },\n    handleClick: function (event) {\n        \n        var mloc = getMousePos( this.c, event );\n        \n        this.clicking = true;\n        this.clickloc = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(mloc.i, mloc.j);\n        this.mouseloc = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(mloc.i, mloc.j);\n        this.addradius = 0;\n        if (this.addingPoint) {\n            this.addPoint(event);\n        } else if (this.addingDisc) {\n            this.addDisc(event);\n        }\n    }\n};\n\nvar getMousePos = function (c, e) {\n//Get mouse x, y\n    var mx, my;\n    var element = c, offsetX = 0, offsetY = 0;\n    if (element.offsetParent !== undefined) {\n        do {\n            offsetX += element.offsetLeft;\n            offsetY += element.offsetTop;\n        } while ((element = element.offsetParent));\n    }\n    var stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(c, null)['paddingLeft'], 10) || 0;\n    var stylePaddingTop = parseInt(document.defaultView.getComputedStyle(c, null)['paddingTop'], 10) || 0;\n    var styleBorderLeft = parseInt(document.defaultView.getComputedStyle(c, null)['borderLeftWidth'], 10) || 0;\n    var styleBorderTop = parseInt(document.defaultView.getComputedStyle(c, null)['borderTopWidth'], 10) || 0;\n    // Some pages have fixed-position bars (like the stumbleupon bar) at the top or left of the page\n    // They will mess up mouse coordinates and this fixes that\n    var html = document.body.parentNode;\n    var htmlTop = html.offsetTop;\n    var htmlLeft = html.offsetLeft;\n    offsetX += stylePaddingLeft + styleBorderLeft + htmlLeft;\n    offsetY += stylePaddingTop + styleBorderTop + htmlTop;\n    mx = e.pageX - offsetX;\n    my = e.pageY - offsetY;\n    return { i: mx, j: my };\n};\n\nvar drawLine = function (screen, a, b) {\n    screen.beginPath();\n    screen.strokeStyle = 'black';\n    screen.moveTo(a.i, a.j);\n    screen.lineTo(b.i, b.j);\n    screen.stroke();\n};\nvar drawQuadtree = function (node, screen) {\n    var nodes = node.getNodes(), i;\n    if (nodes) {\n        for (i = 0; i < nodes.length; i++) {\n            drawQuadtree(nodes[i], screen);\n        }\n    }\n    screen.beginPath();\n    screen.rect(node.x, node.y, node.w, node.h);\n    screen.strokeStyle = 'grey';\n    screen.stroke();\n    screen.closePath();\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputHandler);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/InputHandler.js?");

/***/ }),

/***/ "./src/js/forces/PointSource.js":
/*!**************************************!*\
  !*** ./src/js/forces/PointSource.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vmath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vmath.js */ \"./src/js/forces/vmath.js\");\n\n\n//'Gravity' Point Source \nvar PointSource = function (xi, yi, radius, power) {\n    var center, radius, power, x, y, w, h;\n    //Basic Fields\n    this.center = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.newvector(xi, yi);\n    this.radius = radius;\n    this.G = 0.15;\n    //for drawing\n    this.power = power;\n    this.powerscale = 3;\n    this.n = this.power * this.powerscale;\n    this.b = 2;\n    this.a = 6 * (this.radius - this.n) / (this.n * (this.n + 1) * (2 * this.n + 1));\n    //QT Fields\n    this.x = this.center.x - radius; //Top Left\n    this.y = this.center.y - radius;\n    this.w = 2 * radius;\n    this.h = 2 * radius;\n};\n\nPointSource.prototype = {\n    inRange: function (disc) {\n        return (Math.abs(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(disc.center, this.center))) < this.radius + disc.radius);\n    },\n    applyForce: function (disc) {\n        /* The point source applies a force on the line from the point to\n         * the center of the disc.  this force changes the velocity by a \n         * set amount each frame.\n         * \n         * The amount of velocity subtracted from each component is a function of\n         * distance and the 'mass' of the point source\n         * \n         * V' = V - c1*f(r)*C \n         * \n         * Gonna go with linear, not quadratic,  over d^2 is boring.\n         */\n        var dist = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(disc.center, this.center));\n        var factor = this.G * this.power * disc.radius / (dist); //c1*f(r)\n        var vprime = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(disc.vel, _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(disc.center, this.center), factor)); //V - factor*C\n        disc.setVel(vprime);\n    },\n    draw: function (screen) {\n        var s = function (x, a, b) {\n            return a * x * x + b;\n        };\n        var sums = function (x, a, b, i, j) {\n            //Series a*i^2+b, a and b defined in pointsource.\n            //sum_(x=n)^i x^2 = -1/6 (i-(1+j)) (2 i^2-(1-2 j) i-(2-j)) = S\n            var S = (-1 / 6) * (i - 1 - j) * (2 * i * i - i + 2 * j * i - 2 + j);\n            var ret = Math.abs((i - j) * b + a * S);\n            return ret > 0 ? ret : 0;\n        };\n        var dist = function (p, i) {\n            //Should return the loction of the ith circle of point p\n            //higher power = more circles, closer together\n            //lower power = less circles, spaced further apart\n            return s(i, p.a, p.b) + sums(i, p.a, p.b, 0, i - 1);\n        };\n        for (var i = 1; i < this.n + 1; i++) {\n            var c = Math.floor(255 - 255 * 0.75 * (1 - (dist(this, i) / this.radius)));\n            if (c > 220)\n                c = 220;\n            screen.strokeStyle = \"rgb(\" + c + \",\" + c + \",\" + c + \")\";\n            screen.beginPath();\n            screen.arc(this.center.i, this.center.j, dist(this, i), 0, 2 * Math.PI, true);\n            screen.stroke();\n        }\n    }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PointSource);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/PointSource.js?");

/***/ }),

/***/ "./src/js/forces/Quad.js":
/*!*******************************!*\
  !*** ./src/js/forces/Quad.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nvar QUAD = {};\nQUAD.init = function (args) {\n\n    var node;\n    var TOP_LEFT = 0;\n    var TOP_RIGHT = 1;\n    var BOTTOM_LEFT = 2;\n    var BOTTOM_RIGHT = 3;\n    var PARENT = 4;\n    // assign default values\n    args.maxChildren = args.maxChildren || 2;\n    args.maxDepth = args.maxDepth || 4;\n    /**\n     * Node creator. You should never create a node manually. the algorithm takes\n     * care of that for you.\n     */\n    node = function (x, y, w, h, depth, maxChildren, maxDepth) {\n\n        var items = [], // holds all items\n            nodes = []; // holds all child nodes\n\n        // returns a fresh node object\n        return {\n            x: x, // top left point\n            y: y, // top right point\n            w: w, // width\n            h: h, // height\n            depth: depth, // depth level of the node\n\n            /**\n             * iterates all items that match the selector and invokes the supplied callback on them.\n             */\n            retrieve: function (item, callback, instance) {\n                for (var i = 0; i < items.length; ++i) {\n                    (instance) ? callback.call(instance, items[i]) : callback(items[i]);\n                }\n                // check if node has subnodes\n                if (nodes.length) {\n                    // call retrieve on all matching subnodes\n                    this.findOverlappingNodes(item, function (dir) {\n                        nodes[dir].retrieve(item, callback, instance);\n                    });\n                }\n            },\n            /**\n             * Adds a new Item to the node.\n             *\n             * If the node already has subnodes, the item gets pushed down one level.\n             * If the item does not fit into the subnodes, it gets saved in the\n             * \"children\"-array.\n             *\n             * If the maxChildren limit is exceeded after inserting the item,\n             * the node gets divided and all items inside the \"children\"-array get\n             * pushed down to the new subnodes.\n             */\n            insert: function (item) {\n\n                var i;\n                if (nodes.length) {\n                    // get the node in which the item fits best\n                    i = this.findInsertNode(item);\n                    if (i === PARENT) {\n                        // if the item does not fit, push it into the\n                        // children array\n                        items.push(item);\n                    } else {\n                        nodes[i].insert(item);\n                    }\n                } else {\n                    items.push(item);\n                    //divide the node if maxChildren is exceeded and maxDepth is not reached\n                    if (items.length > maxChildren && this.depth < maxDepth) {\n                        this.divide();\n                    }\n                }\n            },\n            /**\n             * Find a node the item should be inserted in.\n             */\n            findInsertNode: function (item) {\n                // left\n                if (item.x + item.w < x + (w / 2)) {\n                    if (item.y + item.h < y + (h / 2)) {\n                        return TOP_LEFT;\n                    }\n                    if (item.y >= y + (h / 2)) {\n                        return BOTTOM_LEFT;\n                    }\n                    return PARENT;\n                }\n\n                // right\n                if (item.x >= x + (w / 2)) {\n                    if (item.y + item.h < y + (h / 2)) {\n                        return TOP_RIGHT;\n                    }\n                    if (item.y >= y + (h / 2)) {\n                        return BOTTOM_RIGHT;\n                    }\n                    return PARENT;\n                }\n\n                return PARENT;\n            },\n            /**\n             * Finds the regions the item overlaps with. See constants defined\n             * above. The callback is called for every region the item overlaps.\n             */\n            findOverlappingNodes: function (item, callback) {\n                // left\n                if (item.x < x + (w / 2)) {\n                    if (item.y < y + (h / 2)) {\n                        callback(TOP_LEFT);\n                    }\n                    if (item.y + item.h >= y + h / 2) {\n                        callback(BOTTOM_LEFT);\n                    }\n                }\n                // right\n                if (item.x + item.w >= x + (w / 2)) {\n                    if (item.y < y + (h / 2)) {\n                        callback(TOP_RIGHT);\n                    }\n                    if (item.y + item.h >= y + h / 2) {\n                        callback(BOTTOM_RIGHT);\n                    }\n                }\n            },\n            /**\n             * Divides the current node into four subnodes and adds them\n             * to the nodes array of the current node. Then reinserts all\n             * children.\n             */\n            divide: function () {\n                var width, height, i, oldChildren;\n                var childrenDepth = this.depth + 1;\n                // set dimensions of the new nodes\n                width = (w / 2);\n                height = (h / 2);\n                // create top left node\n                nodes.push(node(this.x, this.y, width, height, childrenDepth, maxChildren, maxDepth));\n                // create top right node\n                nodes.push(node(this.x + width, this.y, width, height, childrenDepth, maxChildren, maxDepth));\n                // create bottom left node\n                nodes.push(node(this.x, this.y + height, width, height, childrenDepth, maxChildren, maxDepth));\n                // create bottom right node\n                nodes.push(node(this.x + width, this.y + height, width, height, childrenDepth, maxChildren, maxDepth));\n                oldChildren = items;\n                items = [];\n                for (i = 0; i < oldChildren.length; i++) {\n                    this.insert(oldChildren[i]);\n                }\n            },\n            /**\n             * Clears the node and all its subnodes.\n             */\n            clear: function () {\n                var i;\n                for (i = 0; i < nodes.length; i++) {\n                    nodes[i].clear();\n                }\n                items.length = 0;\n                nodes.length = 0;\n            },\n            /*\n             * convenience method: is not used in the core algorithm.\n             * ---------------------------------------------------------\n             * returns this nodes subnodes. this is usful if we want to do stuff\n             * with the nodes, i.e. accessing the bounds of the nodes to draw them\n             * on a canvas for debugging etc...\n             */\n            getNodes: function () {\n                return nodes.length ? nodes : false;\n            }\n        };\n    };\n    return {\n        root: (function () {\n            return node(args.x, args.y, args.w, args.h, 0, args.maxChildren, args.maxDepth);\n        }()),\n        insert: function (item) {\n\n            var len, i;\n            if (item instanceof Array) {\n                len = item.length;\n                for (i = 0; i < len; i++) {\n                    this.root.insert(item[i]);\n                }\n\n            } else {\n                this.root.insert(item);\n            }\n        },\n        retrieve: function (selector, callback, instance) {\n            return this.root.retrieve(selector, callback, instance);\n        },\n        clear: function () {\n            this.root.clear();\n        }\n    };\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QUAD);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/Quad.js?");

/***/ }),

/***/ "./src/js/forces/Simulation.js":
/*!*************************************!*\
  !*** ./src/js/forces/Simulation.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vmath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vmath.js */ \"./src/js/forces/vmath.js\");\n/* harmony import */ var _Quad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Quad.js */ \"./src/js/forces/Quad.js\");\n/* harmony import */ var _Disc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Disc.js */ \"./src/js/forces/Disc.js\");\n/* harmony import */ var _PointSource_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PointSource.js */ \"./src/js/forces/PointSource.js\");\n/* harmony import */ var _InputHandler_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./InputHandler.js */ \"./src/js/forces/InputHandler.js\");\n\n\n\n\n\n\n//Simulation Class\nvar Simulation = function () {\n\n    this.canvas = document.getElementById('forcecanvas');\n    this.screen = this.canvas.getContext('2d');\n    this.screenSize = {x: this.canvas.width, y: this.canvas.height};\n    //Setting up the container for all the discs and point sources\n    this.discs = [];\n    this.points = [];\n    //Statistics Fields\n    this.frames = [];\n    this.frame = 0;\n    this.fsum = 0;\n    this.fave = 0;\n    this.delta = 1;\n    this.last = new Date().getTime();\n    this.fps = 60;\n\n    this.slowChecks = 0;\n    this.checkCounter = 0;\n    this.energy = 0;\n    for (var i = 0; i < 100; i++) {\n        this.frames.push(0);\n    }\n    this.drawInfo = false;\n    //Starting elements\n    this.points.push(new _PointSource_js__WEBPACK_IMPORTED_MODULE_3__.default(197.5, 167.2, 72, 1.8));\n    this.discs.push(new _Disc_js__WEBPACK_IMPORTED_MODULE_2__.default(337.5, 93, 8, -1.09, 0.9));\n    //Create a quadtree for quick collision detection \n    var args = {\n        x: 0,\n        y: 0,\n        w: this.canvas.width,\n        h: this.canvas.height,\n        maxChildren: 3\n    };\n    this.tree = _Quad_js__WEBPACK_IMPORTED_MODULE_1__.default.init(args);\n    this.showGrid = false;\n    //GifMaker for saving clips\n    // this.gif = new GifMaker(this.screen);\n    // this.recording = false;\n    //Holds all the event handlers and their functions\n    //  -makes it easier to animate control events\n    this.input = new _InputHandler_js__WEBPACK_IMPORTED_MODULE_4__.default(this);\n    //tick() is the main 'game loop', requestAnimationFrame calls tick \n    var self = this;\n    var tick = function () {\n        self.update();\n        self.draw();\n        self.input.draw(); //For fancy control animations! woot\n        // self.gif.update();\n        requestAnimationFrame(tick);\n    };\n    //First call to tick to start things off.\n    tick();\n};\nSimulation.prototype = {\n    update: function () {\n        this.tree.clear();\n        this.tree.insert(this.discs);\n        this.checkCounter = 0;\n        this.energy = 0;\n        //For each disc\n        for (var i = 0; i < this.discs.length; i++) {\n            var b, nearby, collided = false;\n            b = this.discs[i];\n            //For all nearby discs\n            nearby = this.tree.retrieve(b, function (item) {\n                if (notSame(b, item)) {\n                    this.checkCounter++;\n                    collided = resolveCollision(b, item);\n                }\n            }, this);\n            if (!collided) {\n                //If resolveCollision doesnt detect a hit, normal update\n                b.update(this.screenSize);\n            }\n            //Add energy to total.\n            this.energy += b.energy();\n        }\n\n        this.tree.clear();\n        this.tree.insert(this.discs);\n        //For each Point, find nearby discs and act on them\n        for (var i = 0; i < this.points.length; i++) {\n            var p, nearby;\n            p = this.points[i];\n            //For all nearby discs\n            nearby = this.tree.retrieve(p, function (item) {\n                //console.log(item);\n                if (p.inRange(item)) {\n                    p.applyForce(item);\n                }\n            }, this);\n        }\n        if (this.drawInfo) {\n            this.updateStats();\n        }\n    },\n    updateStats: function () {\n        this.delta = (new Date().getTime() - this.last) / 1000;\n        this.last = new Date().getTime();\n        this.fps = 1 / this.delta;\n        this.slowChecks = this.discs.length * (this.discs.length - 1);\n        //100 Frame Average - FPS\n        if (!isNaN(this.frames[this.frame])) {\n            this.fsum -= this.frames[this.frame];\n        }\n        if (!isNaN(this.fps)) {\n            this.fsum += this.fps;\n            this.frames[this.frame] = this.fps;\n        } else {\n            this.frames[this.frame] = 0;\n        }\n        this.fave = (this.fsum / 100).toFixed(2);\n        this.frame = (this.frame + 1) % 100;\n    },\n    draw: function () {\n        this.screen.clearRect(0, 0, this.screenSize.x, this.screenSize.y);\n        for (var i = 0; i < this.points.length; i++) {\n            this.points[i].draw(this.screen);\n        }\n        for (var i = 0; i < this.discs.length; i++) {\n            this.discs[i].draw(this.screen);\n        }\n        if (this.showGrid) {\n            drawQuadtree(this.tree.root, this.screen);\n        }\n        if (this.drawInfo) {\n            this.drawStats(this.screen);\n        }\n        this.input.draw();\n    },\n    drawStats: function (screen) {\n        var d = 18;\n        screen.fillStyle = \"Grey\";\n        screen.font = \"normal 14pt courier\";\n        screen.fillText(\"         N: \" + this.discs.length, 10, d * 1);\n        screen.fillText(\"       FPS: \" + (this.fps).toFixed(1), 10, d * 2);\n        screen.fillText(\"  100F Ave: \" + this.fave, 10, d * 3);\n        screen.fillText(\"N^2 Checks: \" + this.slowChecks, 10, d * 4);\n        screen.fillText(\" QT Checks: \" + this.checkCounter, 10, d * 5);\n        screen.fillText(\"|E| of System: \" + this.energy, 10, d * 6);\n    }\n};\n\nvar resolveCollision = function (b1, b2) {\n//Setting up vectors\n    var C = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(b1.center, b2.center);\n    var movement = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(b2.vel, b1.vel);\n    var long = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(movement);\n    var dist = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(C) - b1.radius - b2.radius;\n    var lenM = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(movement);\n    //First Test - Radii vs Movement vector\n    if (lenM < dist) {\n        return false;\n    }\n\n    var movenorm = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.norm(movement);\n    var D = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.dot(C, movenorm);\n    //Move-towards test\n    if (D <= 0) {\n        return false;\n    }\n\n    var lenC = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(C);\n    var F = lenC * lenC - D * D;\n    var fsumRad2 = (b1.radius + b2.radius) * (b1.radius + b2.radius);\n    //Second Move Test   \n    if (F >= fsumRad2) {\n        return false;\n    }\n\n    var T = fsumRad2 - F;\n    if (T < 0) {\n        return false;\n    }\n    var distance = D - Math.sqrt(T);\n    //Movement length test\n    if (_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(movement) < distance) {\n        return false;\n    }\n\n    var short = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.length(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.norm(movement), distance);\n    var ratio = (short / long);\n    //New positions\n    b1.setPos(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.add(b1.center, _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(b1.vel, ratio)));\n    b2.setPos(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.add(b2.center, _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(b2.vel, ratio)));\n    // We use the new disc locations to calculate the new velocity vectors\n    var n = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.norm(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(b2.center, b1.center));\n    var a1 = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.dot(b1.vel, n);\n    var a2 = _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.dot(b2.vel, n);\n    var adif = a1 - a2;\n    var rad = b1.radius + b2.radius;\n    var p = 2 * (adif / rad);\n    //Set new velocities\n    b1.setVel(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.sub(b1.vel, _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(n, p * b2.radius)));\n    b2.setVel(_vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.add(b2.vel, _vmath_js__WEBPACK_IMPORTED_MODULE_0__.default.times(n, p * b1.radius)));\n    return true;\n};\n\nvar notSame = function (b1, b2) {\n    var dx, dy;\n    dx = b1.center.i - b2.center.i;\n    dy = b1.center.j - b2.center.j;\n    return !((dx == 0) && (dy == 0));\n};\n\nvar drawQuadtree = function (node, screen) {\n    var nodes = node.getNodes(), i;\n    if (nodes) {\n        for (i = 0; i < nodes.length; i++) {\n            drawQuadtree(nodes[i], screen);\n        }\n    }\n    screen.beginPath();\n    screen.rect(node.x, node.y, node.w, node.h);\n    screen.strokeStyle = 'grey';\n    screen.stroke();\n    screen.closePath();\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Simulation);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/Simulation.js?");

/***/ }),

/***/ "./src/js/forces/main.js":
/*!*******************************!*\
  !*** ./src/js/forces/main.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Simulation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Simulation.js */ \"./src/js/forces/Simulation.js\");\n\n\nvar sim = new _Simulation_js__WEBPACK_IMPORTED_MODULE_0__.default();\n\n//# sourceURL=webpack://powcraft/./src/js/forces/main.js?");

/***/ }),

/***/ "./src/js/forces/vmath.js":
/*!********************************!*\
  !*** ./src/js/forces/vmath.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar vmath = {};\nvmath.newvector = function (x, y) {\n    return {\n        i: x,\n        j: y\n    };\n};\nvmath.dot = function (a, b) {\n    return (a.i * b.i) + (a.j * b.j);\n};\nvmath.length = function (a) {\n    return Math.sqrt(Math.pow(a.i, 2) + Math.pow(a.j, 2));\n};\nvmath.norm = function (a) {\n    var d = vmath.length(a);\n    return {\n        i: a.i / d,\n        j: a.j / d\n    };\n};\nvmath.times = function (a, d) {\n    return {\n        i: d * a.i,\n        j: d * a.j\n    };\n};\nvmath.add = function (a, b) {\n    return {\n        i: a.i + b.i,\n        j: a.j + b.j\n    };\n};\nvmath.sub = function (a, b) {\n    return {\n        i: a.i - b.i,\n        j: a.j - b.j\n    };\n};\nvmath.print = function (a) {\n    return \"(\" + (a.i).toFixed(2) + \", \" + (a.j).toFixed(2) + \")\";\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (vmath);\n\n//# sourceURL=webpack://powcraft/./src/js/forces/vmath.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/forces/main.js");
/******/ 	
/******/ })()
;