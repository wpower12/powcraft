/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/beebc/Assembler.js":
/*!***********************************!*\
  !*** ./src/js/beebc/Assembler.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Assembler {\n\tconstructor(){\n\t\t//  [OPC,  MC, # of Operands]\n\t\tthis.OP_MNE = {\n\t\t\t'NOP': [0b0000, 0], \n\t\t\t'LDA': [0b0001, 1], \n\t\t\t'ADD': [0b0010, 1], \n\t\t\t'SUB': [0b0011, 1], \n\t\t\t'STA': [0b0100, 1], \n\t\t\t'LDI': [0b0101, 1], \n\t\t\t'JMP': [0b0110, 1], \n\t\t\t'JC':  [0b0111, 1], \n\t\t\t'JZ':  [0b1000, 1],\n\t\t\t'OUT': [0b1110, 0], \n\t\t\t'HLT': [0b1111, 0]};\n\t\tthis.debug = false;\n\t}\n\n\tassemble(src){\n\t\t// First pass - Fill in the symbol table\n\t\tvar lc = 0;\n\t\tvar symbol_table = [];\n\t\tvar token;\n\t\tvar src_lines = src.split(\"\\n\");\n\t\tfor (var i = 0; i < src_lines.length; i++) {\n\t\t\ttoken = get_tokens(src_lines[i])[0];\n\t\t\tif (is_symbol(token, this.OP_MNE)){\n\t\t\t\tsymbol_table[token] = lc;\n\t\t\t} else {\n\t\t\t\tlc += 1;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass - build the actual machine code \n\t\tvar mc = [16];\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tmc[i] = 0;\n\t\t}\n\t\tvar tokens;\n\t\tvar op;\n\t\tvar st_v;\n\t\tlc = 0;\n\t\tfor (var i = 0; i < src_lines.length; i++) {\n\t\t\ttokens = get_tokens(src_lines[i]);\n\t\t\tif(!is_symbol(tokens[0], this.OP_MNE)){\n\t\t\t\tif(is_int_literal(tokens[0])){\n\t\t\t\t\tmc[lc] = parseInt(tokens[0]);\n\t\t\t\t} else {\n\t\t\t\t\top = this.OP_MNE[tokens[0]];\n\t\t\t\t\tif (op[1] == 0) { // If 0 operand op\n\t\t\t\t\t\tmc[lc] = op[0] << 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(is_symbol(tokens[1], this.OP_MNE)){\n\t\t\t\t\t\t\tmc[lc] = (op[0] << 4) | symbol_table[tokens[1]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmc[lc] = (op[0] << 4) | parseInt(tokens[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlc += 1;\n\t\t\t} \n\t\t}\n\t\tlog_mc(mc, this.debug);\n\t\treturn [0, mc];\n\t}\n};\n\nfunction get_tokens(l){\n\treturn l.trim().split(/\\s+/);\n}\n\nfunction is_opcode(token, ops){\n\treturn token in ops;\n}\n\nfunction is_int_literal(token){\n\treturn !isNaN(parseInt(token, 10));\n}\n\nfunction is_symbol(token, ops){\n\treturn !(is_opcode(token, ops) || is_int_literal(token));\n}\n\nfunction log_mc(mc, debug){\n\tif(debug){\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tconsole.log(\"0b\"+mc[i].toString(2).padStart(8, '0'));\n\t\t}\n\t}\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Assembler);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/Assembler.js?");

/***/ }),

/***/ "./src/js/beebc/EBCGUI.js":
/*!********************************!*\
  !*** ./src/js/beebc/EBCGUI.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass EBCGUI {\n\tconstructor(){\n\t\tthis.el_PC      = document.getElementById('PC');\n\t\tthis.el_MAR     = document.getElementById('MAR');\n\t\tthis.el_BUS     = document.getElementById('Bus');\n\t\tthis.el_A_REG   = document.getElementById('A_reg');\n\t\tthis.el_B_REG   = document.getElementById('B_reg');\n\t\tthis.el_ALU_REG = document.getElementById('S_reg');\n\t\tthis.el_OUT     = document.getElementById('OUT');\n\t\tthis.el_SC \t    = document.getElementById('SC_reg');\n\n\t\tthis.el_IR_I \t= document.getElementById('IR_I_reg');\n\t\tthis.el_IR_D \t= document.getElementById('IR_D_reg');\n\t\tthis.el_INST    = document.getElementById('INST');\n\n\t\tthis.el_cwHT    = document.getElementById('cwHT');\n\t\tthis.el_cwMI    = document.getElementById('cwMI');\n\t\tthis.el_cwRI    = document.getElementById('cwRI');\n\t\tthis.el_cwRO    = document.getElementById('cwRO');\n\t\tthis.el_cwIO    = document.getElementById('cwIO');\n\t\tthis.el_cwII    = document.getElementById('cwII');\n\t\tthis.el_cwAI    = document.getElementById('cwAI');\n\t\tthis.el_cwAO    = document.getElementById('cwAO');\n\t\tthis.el_cwΣO    = document.getElementById('cwΣO');\n\t\tthis.el_cwSU    = document.getElementById('cwSU');\n\t\tthis.el_cwBI    = document.getElementById('cwBI');\n\t\tthis.el_cwOI    = document.getElementById('cwOI');\n\t\tthis.el_cwCE    = document.getElementById('cwCE');\n\t\tthis.el_cwCO    = document.getElementById('cwCO');\n\t\tthis.el_cw_J    = document.getElementById('cw_J');\n\t\tthis.el_cwFI    = document.getElementById('cwFI');\n\n\t\tthis.el_dIR\t    = document.getElementById('decoded_ir');\n\t\t\n\t\tthis.els_RAM = [16];\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tvar el_name = \"m\"+i.toString(2).padStart(4, '0');\n\t\t\tthis.els_RAM[i] = document.getElementById(el_name);\n\t\t}\n\n\t\tthis.inst_map = [16];\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tthis.inst_map[i] = \"NOP\";\n\t\t}\n\n\t\tthis.inst_map[0b0001] = \"LDA\";\n\t\tthis.inst_map[0b0010] = \"ADD\";\n\t\tthis.inst_map[0b0011] = \"SUB\";\n\t\tthis.inst_map[0b0100] = \"STA\";\n\t\tthis.inst_map[0b0101] = \"LDI\";\n\t\tthis.inst_map[0b0110] = \"JMP\";\n\t\tthis.inst_map[0b0111] = \"JC:\";\n\t\tthis.inst_map[0b1000] = \"JZ:\";\n\t\tthis.inst_map[0b1110] = \"OUT\";\n\t\tthis.inst_map[0b1111] = \"HLT\";\n\n\t}\n\n\tupdate_elements(ebc){\n\t\t// Registers\n\t\tthis.el_PC.innerHTML      = this.format_register_html(ebc.PC,      4, true);\n\t\tthis.el_MAR.innerHTML     = this.format_register_html(ebc.MAR,     4, true);\n\t\tthis.el_BUS.innerHTML     = this.format_register_html(ebc.BUS,     8, true);\n\t\tthis.el_A_REG.innerHTML   = this.format_register_html(ebc.A_reg,   8, true);\n\t\tthis.el_B_REG.innerHTML   = this.format_register_html(ebc.B_reg,   8, true);\t\n\t\tthis.el_ALU_REG.innerHTML = this.format_register_html(ebc.ALU_reg, 8, true);\n\t\tthis.el_SC.innerHTML\t  = this.format_register_html(ebc.SC,      3, true);\n\n\t\tthis.el_IR_I.innerHTML\t  = this.format_register_html((ebc.IR >> 4), 4, true);\n\t\tthis.el_INST.innerHTML    = this.format_register_html((ebc.IR >> 4), 4, true);\n\t\tthis.el_IR_D.innerHTML\t  = this.format_register_html((ebc.IR & 0b00001111), 4, true);\n\n\t\t// Ram\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tthis.els_RAM[i].innerHTML = this.format_register_html(ebc.RAM[i], 8, true);\t\n\t\t}\n\n\t\t// Control Word Signals\n\t\tthis.el_cwHT.innerHTML = this.format_register_html((ebc.SIG.HLT & ebc.CW) ? 1 : 0, 1, true); \n\t\tthis.el_cwMI.innerHTML = this.format_register_html((ebc.SIG.MI & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwRI.innerHTML = this.format_register_html((ebc.SIG.RI & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwRO.innerHTML = this.format_register_html((ebc.SIG.RO & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwIO.innerHTML = this.format_register_html((ebc.SIG.IO & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwII.innerHTML = this.format_register_html((ebc.SIG.II & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwAI.innerHTML = this.format_register_html((ebc.SIG.AI & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwAO.innerHTML = this.format_register_html((ebc.SIG.AO & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwΣO.innerHTML = this.format_register_html((ebc.SIG.EO & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwSU.innerHTML = this.format_register_html((ebc.SIG.SU & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwBI.innerHTML = this.format_register_html((ebc.SIG.BI & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwOI.innerHTML = this.format_register_html((ebc.SIG.OI & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwCE.innerHTML = this.format_register_html((ebc.SIG.CE & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cwCO.innerHTML = this.format_register_html((ebc.SIG.CO & ebc.CW)  ? 1 : 0, 1, true); \n\t\tthis.el_cw_J.innerHTML = this.format_register_html((ebc.SIG.J & ebc.CW)   ? 1 : 0, 1, true); \n\t\tthis.el_cwFI.innerHTML = this.format_register_html((ebc.SIG.FI & ebc.CW)  ? 1 : 0, 1, true); \n\n\t\t// Decoded IR\n\t\tthis.el_dIR.innerHTML = this.inst_map[ebc.IR >> 4];\n\t\t\n\t\t// Output Display (in base 10)\n\t\tthis.el_OUT.innerHTML = ebc.OUT_reg.toString(10).padStart(4,'0');\n\t}\n\n\tformat_register_html(content, len, hl){\n\t\tvar initial_str = content.toString(2).padStart(len, '0');\n\t\t\n\t\tif(hl == false){\n\t\t\treturn initial_str;\n\t\t}\n\n\t\tvar ret_str = \"\";\n\t\tfor (var c = 0; c < initial_str.length; c++) {\n\t\t\tvar char = initial_str[c];\n\t\t\tif (char == '0') {\n\t\t\t\tret_str = ret_str + '0';\n\t\t\t} else {\n\t\t\t\tret_str = ret_str + \"<span class='high'>1</span>\";\n\t\t\t}\n\t\t}\n\t\treturn ret_str;\n\t}\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EBCGUI);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/EBCGUI.js?");

/***/ }),

/***/ "./src/js/beebc/EightBitComp.js":
/*!**************************************!*\
  !*** ./src/js/beebc/EightBitComp.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass EightBitComp {\n\tconstructor(){\n\t\tthis.PC      = 0b0000;\t\t// Program Counter\n\t\tthis.MAR     = 0b0000;\t\t// Memory Address Register\n\t\tthis.A_reg   = 0b00000000;\t// A Register\n\t\tthis.B_reg   = 0b00000000;\t// B register\n\t\tthis.ALU_reg = 0b00000000;\t// ALU Output Register\n\t\tthis.OUT_reg = 0b00000000;  // Output register\n\t\tthis.IR      = 0b00000000;  // Instruction Register\n\t\tthis.SC      = 0b000; \t\t// MicroStep Counter\n\t\tthis.FLAGS   = 0b00;\t\t// Flag Register\n\t\tthis.BUS     = 0b00000000;  // Jerome Bettis\n\n\t\tthis.RAM   = new Array(16);\n\t\tfor (var i = 0; i < this.RAM.length; i++) {\n\t\t\t\tthis.RAM[i] = 0b00000000;\n\t\t}\n\n\t\t// Control Word\n\t\tthis.CW= 0b0000000000000000;\n\n\t\t// Control Word Access Enum\n\t\tthis.SIG = { \n\t\t\tHLT: 0b1000000000000000,  // Halt clock\n\t\t\tMI:  0b0100000000000000,  // Memory address register in\n\t\t\tRI:  0b0010000000000000,  // RAM data in\n\t\t\tRO:  0b0001000000000000,  // RAM data out\n\t\t\tIO:  0b0000100000000000,  // Instruction register out\n\t\t\tII:  0b0000010000000000,  // Instruction register in\n\t\t\tAI:  0b0000001000000000,  // A register in\n\t\t\tAO:  0b0000000100000000,  // A register out\n\t\t\tEO:  0b0000000010000000,  // ALU out\n\t\t\tSU:  0b0000000001000000,  // ALU subtract\n\t\t\tBI:  0b0000000000100000,  // B register in\n\t\t\tOI:  0b0000000000010000,  // Output register in\n\t\t\tCE:  0b0000000000001000,  // Program counter enable\n\t\t\tCO:  0b0000000000000100,  // Program counter out\n\t\t\tJ:   0b0000000000000010,  // Jump (program counter in)\n\t\t\tFI:  0b0000000000000001   // Flags in\n\t\t};\n\n\t\t// Flags Access Enum\n\t\tthis.FLG = {\n\t\t\tCF: 0b01,\n\t\t\tZF: 0b10\n\t\t};\n\n\t\t// Machine Code Enum - To index microcode\n\t\tthis.MC = {\n\t\t\tNOP: 0b0000, \n\t\t\tLDA: 0b0001, \n\t\t\tADD: 0b0010, \n\t\t\tSUB: 0b0011, \n\t\t\tSTA: 0b0100, \n\t\t\tLDI: 0b0101, \n\t\t\tJMP: 0b0110, \n\t\t\tJC:  0b0111, \n\t\t\tJZ:  0b1000,\n\t\t\tOUT: 0b1110, \n\t\t\tHLT: 0b1111 \n\t\t}\n\n\t\t// Microcode - Without the first 2 steps, hardcoded later.\n\t\tthis.MICRO = [];\n\t\tthis.MICRO[this.MC.ADD] = [this.SIG.IO | this.SIG.MI,\n\t\t\t\t\t\t\t\t   this.SIG.RO | this.SIG.BI,\n\t\t\t\t\t\t\t\t   this.SIG.EO | this.SIG.AI | this.SIG.FI,\n\t\t\t\t\t\t\t\t   0,0,0];\n\t\tthis.MICRO[this.MC.SUB] = [this.SIG.IO | this.SIG.MI,\n\t\t\t\t\t\t\t\t   this.SIG.RO | this.SIG.BI,\n\t\t\t\t\t\t\t\t   this.SIG.EO | this.SIG.AI | this.SIG.SU | this.SIG.FI,\n\t\t\t\t\t\t\t\t   0,0,0];\n\t\tthis.MICRO[this.MC.LDA] = [this.SIG.IO | this.SIG.MI,\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   this.SIG.RO | this.SIG.AI, \n\t\t\t\t\t\t\t\t   0,0,0,0];\n\t\tthis.MICRO[this.MC.STA] = [this.SIG.IO | this.SIG.MI,\n\t\t\t\t\t\t\t\t   this.SIG.AO | this.SIG.RI,\n\t\t\t\t\t\t\t\t   0,0,0,0];\n    \tthis.MICRO[this.MC.LDI] = [this.SIG.IO | this.SIG.AI,\n\t\t\t\t\t\t\t\t   0,0,0,0,0];\n\t\tthis.MICRO[this.MC.JMP] = [this.SIG.IO | this.SIG.J,\n\t\t\t\t\t\t\t\t   0,0,0,0,0];\n\t\tthis.MICRO[this.MC.OUT] = [this.SIG.AO | this.SIG.OI,\n\t\t\t\t\t\t\t\t   0,0,0,0,0];\n\t    this.MICRO[this.MC.HLT] = [this.SIG.HLT,\n\t\t\t\t\t\t\t\t   0,0,0,0,0];\n\t\tthis.MICRO[this.MC.NOP] = [0,0,0,0,0,0];\n\t\tthis.MICRO[this.MC.JC]  = [0,0,0,0,0,0];\n\t\tthis.MICRO[this.MC.JZ]  = [0,0,0,0,0,0];\n\t\n\t\tthis.running = true;\n\t\tthis.debug = false;\n\t}\n\n\ttick(){\n\t\tif(this.running){\n\t\t\tthis.CW = this.decode_instruction(this.SC, this.IR >>> 4, this.FLAGS);\n\t\t\tlog_tick(this.PC, this.SC, this.CW, this.debug);\n\t\t\tthis.update_modules(this.CW);\n\t\t}\n\t}\n\n\tdecode_instruction(step, instruction, flags){\n\t\t// Hardcoding the first two steps - \"Fetch\"\n\t\tif(step == 0){\n\t\t\treturn this.SIG.MI | \t\n\t\t\t\t   this.SIG.CO; \t\n\t\t}\n\t\tif(step == 1){\n\t\t\treturn this.SIG.RO |\n\t\t\t       this.SIG.II |\n\t\t\t       this.SIG.CE;\n\t\t}\n\n\t\t// Handle Jump Carry\n\t\tif((instruction == this.MC.JC) && \n\t\t   (flags & this.FLG.CF) &&\n\t\t   (step  == 2)){\n\t\t\treturn this.SIG.IO | this.SIG.J;\n\t\t}\n\n\t\t// Handle Zero Carry\n\t\tif((instruction == this.MC.JZ) && \n\t\t   (flags & this.FLG.ZF) &&\n\t\t   (step  == 2)){\n\t\t\treturn this.SIG.IO | this.SIG.J;\n\t\t}\n\n\t\t// Handle \"normal\" microcode - Note the MICRO array starts at\n\t\t//                             the 2th step. \n\t\treturn this.MICRO[instruction][step-2];\n\t}\t\n\t\n\tupdate_modules(word){\n\t\t// ** Write(ish) ** operations first for timing\n\t\tif(word & this.SIG.RO){\t// Ram Out\n\t\t\tthis.BUS = this.RAM[this.MAR]; \n\t\t\tlog_ma(this.MAR, this.RAM[this.MAR], true, this.debug);\n\t\t}\n\t\tif(word & this.SIG.IO){\t// Instruction Out\n\t\t\t// 4 LSB from IR to BUS\n\t\t\tthis.BUS = this.IR & 0b00001111; \n\t\t\tlog_reg(\"IR Out\", this.IR, 8, this.debug);\n\t\t} \n\t\tif(word & this.SIG.AO){\t// A Register Out\n\t\t\tthis.BUS = this.A_reg; \n\t\t\tlog_reg(\"A Out\", this.A_reg, 8, this.debug);\n\t\t}\n\t\tif(word & this.SIG.CO){ // Program Counter Out\n\t\t\tthis.BUS = this.PC;\n\t\t\tlog_reg(\"Counter Out\", this.PC, 4, this.debug);\n\t\t}\n\n\t\t// ALU Reg Gets updated every clock cycle\n\t\tvar result;\n\t\tif( word & this.SIG.SU ){\t// Subtract Signal \n\t\t\tresult = this.A_reg - this.B_reg;\n\t\t} else {\t\t\t\t\t// Add\n\t\t\tresult = this.A_reg + this.B_reg;\n\t\t}\n\t\tthis.ALU_reg = result & 0b11111111;\n\n\t\tif(word & this.SIG.FI){\t\t// Flags In\n\t\t\tthis.FLAGS = 0b00;\n\t\t\tif( result > 0b11111111){ \t// Carry \n\t\t\t\tthis.FLAGS = this.FLAGS | this.FLG.CF;\n\t\t\t}\n\t\t\tif( result == 0b00000000){\t// Zero\n\t\t\t\tthis.FLAGS = this.FLAGS | this.FLG.ZF;\n\t\t\t}\n\t\t\tlog_reg(\"Flags In\", this.FLAGS, 2, this.debug);\n\t\t}\n\n\t\t// ** Add/Sub have the 'complicated' timing. must happen before AI.\n\t\tif(word & this.SIG.EO){\t// ALU Register Out\n\t\t\tthis.BUS = this.ALU_reg;\n\t\t\tlog_reg(\"ALU Out\", this.ALU_reg, 8, this.debug);\n\t\t}\n\n\t\t// ** Read(ish) ** operations. \n\t\tif(word & this.SIG.MI){ // Memory Address Register In\n\t\t\tthis.MAR = this.BUS & 0b00001111;\n\t\t\tlog_reg(\"MAR In\", this.MAR, 4, this.debug);\n\t\t} \n\t\tif(word & this.SIG.RI){ // RAM In (at MAR location)\n\t\t\tthis.RAM[this.MAR] = this.BUS;\n\t\t\tlog_ma(this.MAR, this.BUS, false, this.debug);\n\t\t} \n\t\tif(word & this.SIG.II){ // Instruction Register In\n\t\t\tthis.IR = this.BUS;\n\t\t\tlog_reg(\"IR In\", this.IR, 8, this.debug);\n\t\t} \n\t\tif(word & this.SIG.AI){ // A Register In\n\t\t\tthis.A_reg = this.BUS;\t\n\t\t\tlog_reg(\"A In\", this.A_reg, 8, this.debug);\n\t\t}\n\t\tif(word & this.SIG.BI){ // B Register In\n\t\t\tthis.B_reg = this.BUS;\t\n\t\t\tlog_reg(\"B In\", this.B_reg, 8, this.debug);\n\t\t}\n\t\tif(word & this.SIG.OI){ // Output Register In\n\t\t\tthis.OUT_reg = this.BUS;\t\n\t\t\tlog_reg(\"Out In\", this.OUT_reg, 8, this.debug);\n\t\t}\n\t\tif(word & this.SIG.J){ // Jump - Program Counter In\n\t\t\tthis.PC = this.BUS & 0b00001111; // Only 4 LSB\n\t\t\tlog_reg(\"PC In\", this.PC, 4, this.debug);\t\n\t\t}\n\n\t\t// Advance PC on Counter Enable Signal\n\t\tif(word & this.SIG.CE){\n\t\t\tthis.PC = (this.PC + 1);\n\t\t\tlog_reg(\"Counter Enabled\", this.PC, 4, this.debug);\n\t\t}\n\t\t// Advance Step Counter \n\t\tthis.SC = (this.SC + 1) & 0b111;\n\n\t\tif(word & this.SIG.HLT){ // \n\t\t\tthis.running = false;\n\t\t}\n\t}\n\n\treset_not_RAM(){\n\t\tthis.PC      = 0b0000;\t\t\n\t\tthis.MAR     = 0b0000;\t\t\n\t\tthis.A_reg   = 0b00000000;\t\n\t\tthis.B_reg   = 0b00000000;\t\n\t\tthis.ALU_reg = 0b00000000;\t\n\t\tthis.OUT_reg = 0b00000000;  \n\t\tthis.IR      = 0b00000000; \n\t\tthis.SC      = 0b000; \t\t\n\t\tthis.FLAGS   = 0b00;\t\t\n\t\tthis.BUS     = 0b00000000;  \n\t\tthis.CW= 0b0000000000000000;\n\t}\n};\n\n\n// ** Logging functions **\n// Generic Register-Bus Interaction\nfunction log_reg(n, r, l, debug){\n\tif(debug){\n\t\tconsole.log(\"\\t\"+n+\" \"+r.toString(2).padStart(l, '0'));\n\t}\n}\n// Memory Access\nfunction log_ma(addy, value, out, debug){\n\tif(debug){\n\t\tvar msg;\n\t\tif(out){\n\t\t\tmsg = \"\\tRAM Out [\";\n\t\t} else {\n\t\t\tmsg = \"\\tRAM In [\";\n\t\t}\n\t\tconsole.log(msg+addy+\"]=\"+value);\n\t}\n}\n// Summarize a tick\nfunction log_tick(pc, sc, cw, debug){\n\tif(debug){\n\t\tvar msg = \"pc: \"+pc+\" sc: \"+sc+\" cw: \";\n\t\tmsg    += cw.toString(2).padStart(16, '0');\n\t\tconsole.log(msg);\n\t}\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EightBitComp);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/EightBitComp.js?");

/***/ }),

/***/ "./src/js/beebc/Examples.js":
/*!**********************************!*\
  !*** ./src/js/beebc/Examples.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Add42\": () => (/* binding */ Add42),\n/* harmony export */   \"SubTest\": () => (/* binding */ SubTest),\n/* harmony export */   \"AddSub\": () => (/* binding */ AddSub),\n/* harmony export */   \"AddSub_Src\": () => (/* binding */ AddSub_Src)\n/* harmony export */ });\nlet Add42 = [ \n\t0b00010100, // LDA [4] - Load from memory at 4\n\t0b00100101, // ADD [5] - Load from memory at 5 into B, put A+B in A\n\t0b11100000, // OUT     - Put A in OR, and Display\n\t0b11110000, // HLT     - Halt\t\t \n\t0b00001110, // [4]     - 14\n\t0b00011100, // [5]     - 28\n\t0b00000000, //\n\t0b00000000, //\t\t \n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\t\t\t \t \n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000];//\n\nlet SubTest = [ \n\t0b00010101, // LDA [4] - Load from memory at 5\n\t0b00110100, // SUB [5] - Load from memory at 4 into B, put A-B in A\n\t0b11100000, // OUT     - Put A in OR, and Display\n\t0b11110000, // HLT     - Halt\t\t \n\t0b00001110, // [4]     - 14\n\t0b00011100, // [5]     - 28\n\t0b00000000, //\n\t0b00000000, //\t\t \n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\t\t\t \t \n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000, //\n\t0b00000000];//\n \nlet AddSub = [ \n\t0b11100000, // [00] OUT\n\t0b00101000, // [01] ADD 8\n\t0b01110100, // [02] JC  4\n\t0b01100000, // [03] JMP 0\n\t0b00111000, // [04] SUB 8\n\t0b11100000, // [05] OUT\n\t0b10000000, // [06] JZ  0\n\t0b01100100, // [07]\tJMP 4 \n\t0b00000001, // [08] 1\n\t0b00000000, // [09]\n\t0b00000000, // [10]\t\t\t \t \n\t0b00000000, // [11]\n\t0b00000000, // [12]\n\t0b00000000, // [13]\n\t0b00000000, // [14] \n\t0b00000000];// [15] \n\nlet AddSub_Src = \n`ADD_LOOP\n  OUT\n  ADD ONE\n  JC SUB_LOOP\n  JMP ADD_LOOP\nSUB_LOOP\n  SUB ONE\n  OUT\n  JZ ADD_LOOP\n  JMP SUB_LOOP\nONE\n  1`;\n\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/Examples.js?");

/***/ }),

/***/ "./src/js/beebc/main.js":
/*!******************************!*\
  !*** ./src/js/beebc/main.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("EightBitComp = __webpack_require__(/*! ./EightBitComp */ \"./src/js/beebc/EightBitComp.js\").default;\nEBCGUI       = __webpack_require__(/*! ./EBCGUI */ \"./src/js/beebc/EBCGUI.js\").default;\nAssembler    = __webpack_require__(/*! ./Assembler */ \"./src/js/beebc/Assembler.js\").default;\nExamples     = __webpack_require__(/*! ./Examples */ \"./src/js/beebc/Examples.js\");\n\nebc     = new EightBitComp();\nebc_gui = new EBCGUI();\nass     = new Assembler();\n\nvar DELAY = 5;\nvar running = false;\nvar timer;\n\n// **** BUTTONS ****\n// Advance Clock One Tick - The 'Step' button\nfunction step(){\n\tebc.tick(); \n\tebc_gui.update_elements(ebc);\n}\nbtn_step = document.getElementById('clk_step');\nbtn_step.onclick = step;\n\n// Start/Stop the clock - \"play/pause\" button\nfunction startstop(){\n\tif(running){\n\t\trunning = false;\n\t\tclearTimeout(timer);\n\t} else {\n\t\trunning = true;\n\t\ttimer = setInterval(step, DELAY);\n\t}\n}\nbtn_ss = document.getElementById('clk_start');\nbtn_ss.onclick = startstop;\n\n// Reset - Clear everything but the RAM\nfunction reset(){\n\tebc.reset_not_RAM();\n\tebc_gui.update_elements(ebc);\n}\nbtn_rs = document.getElementById('reset');\nbtn_rs.onclick = reset;\n\n// Process Code in Assembler Area\nfunction assemble(){\n\tsrc = ass_txt.value; \n\tres = ass.assemble(src); // Will return an object, so I can pass a\n\t\t\t\t\t\t\t // error code if needed. \n\n\tif(res[0] == 0){         // Error code of 0 == no error\n\t\tebc.RAM = res[1];    // Means we can safely dump result into ram.\n\t} else {\n\t\tconsole.log(\"Error in assembly: \"+res[0]);\n\t}\n\tebc_gui.update_elements(ebc);\n\treturn false;\n}\nass_txt  = document.getElementById('ass_in');\nform_ass = document.getElementById('ass_form');\nform_ass.onsubmit = assemble;\n\n// *** Memory Editing\nmems_dsp = [16];\nmems_inp = [16];\nmems_btn = [16];\nvar idx;\nfor (var i = 0; i < 16; i++) {\n\tidx = i.toString(2).padStart(4,'0');\n\tmems_dsp[i] = document.getElementById('m'+idx);\n\tmems_inp[i] = document.getElementById('i'+idx);\n\tmems_btn[i] = document.getElementById('b'+idx);\n}\n\nfunction edit_mem(){\n\tvar i = parseInt(this.id.substring(1), 2);\n\tmems_dsp[i].classList.add(\"hidden\");\n\tmems_inp[i].classList.remove(\"hidden\");\n\tmems_btn[i].classList.remove(\"hidden\");\n\tmems_inp[i].value = ebc.RAM[i].toString(2).padStart(8, '0');\n}\n\nfunction save_mem(){\n\tvar i = parseInt(this.id.substring(1), 2);\n\tebc.RAM[i] = parseInt(mems_inp[i].value, 2);\n\tmems_dsp[i].innerHTML = ebc_gui.format_register_html(ebc.RAM[i].toString(2), 8, true);\n\tmems_dsp[i].classList.remove(\"hidden\");\n\tmems_inp[i].classList.add(\"hidden\");\n\tmems_btn[i].classList.add(\"hidden\");\n}\n\nfor (var i = 0; i < 16; i++) {\n\tmems_dsp[i].onclick = edit_mem;\n\tmems_btn[i].onclick = save_mem;\n}\n\n// Load some initial code. \nebc.RAM = Examples.AddSub;\nass_txt.value = Examples.AddSub_Src;\nebc_gui.update_elements(ebc);\n\n\n\n\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/beebc/main.js");
/******/ 	
/******/ })()
;