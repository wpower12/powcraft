/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/beebc/Assembler.js":
/*!***********************************!*\
  !*** ./src/js/beebc/Assembler.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Assembler = /*#__PURE__*/function () {\n  function Assembler() {\n    _classCallCheck(this, Assembler);\n\n    //  [OPC,  MC, # of Operands]\n    this.OP_MNE = {\n      'NOP': [0, 0],\n      'LDA': [1, 1],\n      'ADD': [2, 1],\n      'SUB': [3, 1],\n      'STA': [4, 1],\n      'LDI': [5, 1],\n      'JMP': [6, 1],\n      'JC': [7, 1],\n      'JZ': [8, 1],\n      'OUT': [14, 0],\n      'HLT': [15, 0]\n    };\n    this.debug = false;\n  }\n\n  _createClass(Assembler, [{\n    key: \"assemble\",\n    value: function assemble(src) {\n      // First pass - Fill in the symbol table\n      var lc = 0;\n      var symbol_table = [];\n      var token;\n      var src_lines = src.split(\"\\n\");\n\n      for (var i = 0; i < src_lines.length; i++) {\n        token = get_tokens(src_lines[i])[0];\n\n        if (is_symbol(token, this.OP_MNE)) {\n          symbol_table[token] = lc;\n        } else {\n          lc += 1;\n        }\n      } // Second pass - build the actual machine code \n\n\n      var mc = [16];\n\n      for (var i = 0; i < 16; i++) {\n        mc[i] = 0;\n      }\n\n      var tokens;\n      var op;\n      var st_v;\n      lc = 0;\n\n      for (var i = 0; i < src_lines.length; i++) {\n        tokens = get_tokens(src_lines[i]);\n\n        if (!is_symbol(tokens[0], this.OP_MNE)) {\n          if (is_int_literal(tokens[0])) {\n            mc[lc] = parseInt(tokens[0]);\n          } else {\n            op = this.OP_MNE[tokens[0]];\n\n            if (op[1] == 0) {\n              // If 0 operand op\n              mc[lc] = op[0] << 4;\n            } else {\n              if (is_symbol(tokens[1], this.OP_MNE)) {\n                mc[lc] = op[0] << 4 | symbol_table[tokens[1]];\n              } else {\n                mc[lc] = op[0] << 4 | parseInt(tokens[1]);\n              }\n            }\n          }\n\n          lc += 1;\n        }\n      }\n\n      log_mc(mc, this.debug);\n      return [0, mc];\n    }\n  }]);\n\n  return Assembler;\n}();\n\n;\n\nfunction get_tokens(l) {\n  return l.trim().split(/\\s+/);\n}\n\nfunction is_opcode(token, ops) {\n  return token in ops;\n}\n\nfunction is_int_literal(token) {\n  return !isNaN(parseInt(token, 10));\n}\n\nfunction is_symbol(token, ops) {\n  return !(is_opcode(token, ops) || is_int_literal(token));\n}\n\nfunction log_mc(mc, debug) {\n  if (debug) {\n    for (var i = 0; i < 16; i++) {\n      console.log(\"0b\" + mc[i].toString(2).padStart(8, '0'));\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Assembler);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/Assembler.js?");

/***/ }),

/***/ "./src/js/beebc/EBCGUI.js":
/*!********************************!*\
  !*** ./src/js/beebc/EBCGUI.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EBCGUI = /*#__PURE__*/function () {\n  function EBCGUI() {\n    _classCallCheck(this, EBCGUI);\n\n    this.el_PC = document.getElementById('PC');\n    this.el_MAR = document.getElementById('MAR');\n    this.el_BUS = document.getElementById('Bus');\n    this.el_A_REG = document.getElementById('A_reg');\n    this.el_B_REG = document.getElementById('B_reg');\n    this.el_ALU_REG = document.getElementById('S_reg');\n    this.el_OUT = document.getElementById('OUT');\n    this.el_SC = document.getElementById('SC_reg');\n    this.el_IR_I = document.getElementById('IR_I_reg');\n    this.el_IR_D = document.getElementById('IR_D_reg');\n    this.el_INST = document.getElementById('INST');\n    this.el_cwHT = document.getElementById('cwHT');\n    this.el_cwMI = document.getElementById('cwMI');\n    this.el_cwRI = document.getElementById('cwRI');\n    this.el_cwRO = document.getElementById('cwRO');\n    this.el_cwIO = document.getElementById('cwIO');\n    this.el_cwII = document.getElementById('cwII');\n    this.el_cwAI = document.getElementById('cwAI');\n    this.el_cwAO = document.getElementById('cwAO');\n    this.el_cwΣO = document.getElementById('cwΣO');\n    this.el_cwSU = document.getElementById('cwSU');\n    this.el_cwBI = document.getElementById('cwBI');\n    this.el_cwOI = document.getElementById('cwOI');\n    this.el_cwCE = document.getElementById('cwCE');\n    this.el_cwCO = document.getElementById('cwCO');\n    this.el_cw_J = document.getElementById('cw_J');\n    this.el_cwFI = document.getElementById('cwFI');\n    this.el_dIR = document.getElementById('decoded_ir');\n    this.els_RAM = [16];\n\n    for (var i = 0; i < 16; i++) {\n      var el_name = \"m\" + i.toString(2).padStart(4, '0');\n      this.els_RAM[i] = document.getElementById(el_name);\n    }\n\n    this.inst_map = [16];\n\n    for (var i = 0; i < 16; i++) {\n      this.inst_map[i] = \"NOP\";\n    }\n\n    this.inst_map[1] = \"LDA\";\n    this.inst_map[2] = \"ADD\";\n    this.inst_map[3] = \"SUB\";\n    this.inst_map[4] = \"STA\";\n    this.inst_map[5] = \"LDI\";\n    this.inst_map[6] = \"JMP\";\n    this.inst_map[7] = \"JC:\";\n    this.inst_map[8] = \"JZ:\";\n    this.inst_map[14] = \"OUT\";\n    this.inst_map[15] = \"HLT\";\n  }\n\n  _createClass(EBCGUI, [{\n    key: \"update_elements\",\n    value: function update_elements(ebc) {\n      // Registers\n      this.el_PC.innerHTML = this.format_register_html(ebc.PC, 4, true);\n      this.el_MAR.innerHTML = this.format_register_html(ebc.MAR, 4, true);\n      this.el_BUS.innerHTML = this.format_register_html(ebc.BUS, 8, true);\n      this.el_A_REG.innerHTML = this.format_register_html(ebc.A_reg, 8, true);\n      this.el_B_REG.innerHTML = this.format_register_html(ebc.B_reg, 8, true);\n      this.el_ALU_REG.innerHTML = this.format_register_html(ebc.ALU_reg, 8, true);\n      this.el_SC.innerHTML = this.format_register_html(ebc.SC, 3, true);\n      this.el_IR_I.innerHTML = this.format_register_html(ebc.IR >> 4, 4, true);\n      this.el_INST.innerHTML = this.format_register_html(ebc.IR >> 4, 4, true);\n      this.el_IR_D.innerHTML = this.format_register_html(ebc.IR & 15, 4, true); // Ram\n\n      for (var i = 0; i < 16; i++) {\n        this.els_RAM[i].innerHTML = this.format_register_html(ebc.RAM[i], 8, true);\n      } // Control Word Signals\n\n\n      this.el_cwHT.innerHTML = this.format_register_html(ebc.SIG.HLT & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwMI.innerHTML = this.format_register_html(ebc.SIG.MI & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwRI.innerHTML = this.format_register_html(ebc.SIG.RI & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwRO.innerHTML = this.format_register_html(ebc.SIG.RO & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwIO.innerHTML = this.format_register_html(ebc.SIG.IO & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwII.innerHTML = this.format_register_html(ebc.SIG.II & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwAI.innerHTML = this.format_register_html(ebc.SIG.AI & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwAO.innerHTML = this.format_register_html(ebc.SIG.AO & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwΣO.innerHTML = this.format_register_html(ebc.SIG.EO & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwSU.innerHTML = this.format_register_html(ebc.SIG.SU & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwBI.innerHTML = this.format_register_html(ebc.SIG.BI & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwOI.innerHTML = this.format_register_html(ebc.SIG.OI & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwCE.innerHTML = this.format_register_html(ebc.SIG.CE & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwCO.innerHTML = this.format_register_html(ebc.SIG.CO & ebc.CW ? 1 : 0, 1, true);\n      this.el_cw_J.innerHTML = this.format_register_html(ebc.SIG.J & ebc.CW ? 1 : 0, 1, true);\n      this.el_cwFI.innerHTML = this.format_register_html(ebc.SIG.FI & ebc.CW ? 1 : 0, 1, true); // Decoded IR\n\n      this.el_dIR.innerHTML = this.inst_map[ebc.IR >> 4]; // Output Display (in base 10)\n\n      this.el_OUT.innerHTML = ebc.OUT_reg.toString(10).padStart(4, '0');\n    }\n  }, {\n    key: \"format_register_html\",\n    value: function format_register_html(content, len, hl) {\n      var initial_str = content.toString(2).padStart(len, '0');\n\n      if (hl == false) {\n        return initial_str;\n      }\n\n      var ret_str = \"\";\n\n      for (var c = 0; c < initial_str.length; c++) {\n        var _char = initial_str[c];\n\n        if (_char == '0') {\n          ret_str = ret_str + '0';\n        } else {\n          ret_str = ret_str + \"<span class='high'>1</span>\";\n        }\n      }\n\n      return ret_str;\n    }\n  }]);\n\n  return EBCGUI;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EBCGUI);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/EBCGUI.js?");

/***/ }),

/***/ "./src/js/beebc/EightBitComp.js":
/*!**************************************!*\
  !*** ./src/js/beebc/EightBitComp.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar EightBitComp = /*#__PURE__*/function () {\n  function EightBitComp() {\n    _classCallCheck(this, EightBitComp);\n\n    this.PC = 0; // Program Counter\n\n    this.MAR = 0; // Memory Address Register\n\n    this.A_reg = 0; // A Register\n\n    this.B_reg = 0; // B register\n\n    this.ALU_reg = 0; // ALU Output Register\n\n    this.OUT_reg = 0; // Output register\n\n    this.IR = 0; // Instruction Register\n\n    this.SC = 0; // MicroStep Counter\n\n    this.FLAGS = 0; // Flag Register\n\n    this.BUS = 0; // Jerome Bettis\n\n    this.RAM = new Array(16);\n\n    for (var i = 0; i < this.RAM.length; i++) {\n      this.RAM[i] = 0;\n    } // Control Word\n\n\n    this.CW = 0; // Control Word Access Enum\n\n    this.SIG = {\n      HLT: 32768,\n      // Halt clock\n      MI: 16384,\n      // Memory address register in\n      RI: 8192,\n      // RAM data in\n      RO: 4096,\n      // RAM data out\n      IO: 2048,\n      // Instruction register out\n      II: 1024,\n      // Instruction register in\n      AI: 512,\n      // A register in\n      AO: 256,\n      // A register out\n      EO: 128,\n      // ALU out\n      SU: 64,\n      // ALU subtract\n      BI: 32,\n      // B register in\n      OI: 16,\n      // Output register in\n      CE: 8,\n      // Program counter enable\n      CO: 4,\n      // Program counter out\n      J: 2,\n      // Jump (program counter in)\n      FI: 1 // Flags in\n\n    }; // Flags Access Enum\n\n    this.FLG = {\n      CF: 1,\n      ZF: 2\n    }; // Machine Code Enum - To index microcode\n\n    this.MC = {\n      NOP: 0,\n      LDA: 1,\n      ADD: 2,\n      SUB: 3,\n      STA: 4,\n      LDI: 5,\n      JMP: 6,\n      JC: 7,\n      JZ: 8,\n      OUT: 14,\n      HLT: 15\n    }; // Microcode - Without the first 2 steps, hardcoded later.\n\n    this.MICRO = [];\n    this.MICRO[this.MC.ADD] = [this.SIG.IO | this.SIG.MI, this.SIG.RO | this.SIG.BI, this.SIG.EO | this.SIG.AI | this.SIG.FI, 0, 0, 0];\n    this.MICRO[this.MC.SUB] = [this.SIG.IO | this.SIG.MI, this.SIG.RO | this.SIG.BI, this.SIG.EO | this.SIG.AI | this.SIG.SU | this.SIG.FI, 0, 0, 0];\n    this.MICRO[this.MC.LDA] = [this.SIG.IO | this.SIG.MI, this.SIG.RO | this.SIG.AI, 0, 0, 0, 0];\n    this.MICRO[this.MC.STA] = [this.SIG.IO | this.SIG.MI, this.SIG.AO | this.SIG.RI, 0, 0, 0, 0];\n    this.MICRO[this.MC.LDI] = [this.SIG.IO | this.SIG.AI, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.JMP] = [this.SIG.IO | this.SIG.J, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.OUT] = [this.SIG.AO | this.SIG.OI, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.HLT] = [this.SIG.HLT, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.NOP] = [0, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.JC] = [0, 0, 0, 0, 0, 0];\n    this.MICRO[this.MC.JZ] = [0, 0, 0, 0, 0, 0];\n    this.running = true;\n    this.debug = false;\n  }\n\n  _createClass(EightBitComp, [{\n    key: \"tick\",\n    value: function tick() {\n      if (this.running) {\n        this.CW = this.decode_instruction(this.SC, this.IR >>> 4, this.FLAGS);\n        log_tick(this.PC, this.SC, this.CW, this.debug);\n        this.update_modules(this.CW);\n      }\n    }\n  }, {\n    key: \"decode_instruction\",\n    value: function decode_instruction(step, instruction, flags) {\n      // Hardcoding the first two steps - \"Fetch\"\n      if (step == 0) {\n        return this.SIG.MI | this.SIG.CO;\n      }\n\n      if (step == 1) {\n        return this.SIG.RO | this.SIG.II | this.SIG.CE;\n      } // Handle Jump Carry\n\n\n      if (instruction == this.MC.JC && flags & this.FLG.CF && step == 2) {\n        return this.SIG.IO | this.SIG.J;\n      } // Handle Zero Carry\n\n\n      if (instruction == this.MC.JZ && flags & this.FLG.ZF && step == 2) {\n        return this.SIG.IO | this.SIG.J;\n      } // Handle \"normal\" microcode - Note the MICRO array starts at\n      //                             the 2th step. \n\n\n      return this.MICRO[instruction][step - 2];\n    }\n  }, {\n    key: \"update_modules\",\n    value: function update_modules(word) {\n      // ** Write(ish) ** operations first for timing\n      if (word & this.SIG.RO) {\n        // Ram Out\n        this.BUS = this.RAM[this.MAR];\n        log_ma(this.MAR, this.RAM[this.MAR], true, this.debug);\n      }\n\n      if (word & this.SIG.IO) {\n        // Instruction Out\n        // 4 LSB from IR to BUS\n        this.BUS = this.IR & 15;\n        log_reg(\"IR Out\", this.IR, 8, this.debug);\n      }\n\n      if (word & this.SIG.AO) {\n        // A Register Out\n        this.BUS = this.A_reg;\n        log_reg(\"A Out\", this.A_reg, 8, this.debug);\n      }\n\n      if (word & this.SIG.CO) {\n        // Program Counter Out\n        this.BUS = this.PC;\n        log_reg(\"Counter Out\", this.PC, 4, this.debug);\n      } // ALU Reg Gets updated every clock cycle\n\n\n      var result;\n\n      if (word & this.SIG.SU) {\n        // Subtract Signal \n        result = this.A_reg - this.B_reg;\n      } else {\n        // Add\n        result = this.A_reg + this.B_reg;\n      }\n\n      this.ALU_reg = result & 255;\n\n      if (word & this.SIG.FI) {\n        // Flags In\n        this.FLAGS = 0;\n\n        if (result > 255) {\n          // Carry \n          this.FLAGS = this.FLAGS | this.FLG.CF;\n        }\n\n        if (result == 0) {\n          // Zero\n          this.FLAGS = this.FLAGS | this.FLG.ZF;\n        }\n\n        log_reg(\"Flags In\", this.FLAGS, 2, this.debug);\n      } // ** Add/Sub have the 'complicated' timing. must happen before AI.\n\n\n      if (word & this.SIG.EO) {\n        // ALU Register Out\n        this.BUS = this.ALU_reg;\n        log_reg(\"ALU Out\", this.ALU_reg, 8, this.debug);\n      } // ** Read(ish) ** operations. \n\n\n      if (word & this.SIG.MI) {\n        // Memory Address Register In\n        this.MAR = this.BUS & 15;\n        log_reg(\"MAR In\", this.MAR, 4, this.debug);\n      }\n\n      if (word & this.SIG.RI) {\n        // RAM In (at MAR location)\n        this.RAM[this.MAR] = this.BUS;\n        log_ma(this.MAR, this.BUS, false, this.debug);\n      }\n\n      if (word & this.SIG.II) {\n        // Instruction Register In\n        this.IR = this.BUS;\n        log_reg(\"IR In\", this.IR, 8, this.debug);\n      }\n\n      if (word & this.SIG.AI) {\n        // A Register In\n        this.A_reg = this.BUS;\n        log_reg(\"A In\", this.A_reg, 8, this.debug);\n      }\n\n      if (word & this.SIG.BI) {\n        // B Register In\n        this.B_reg = this.BUS;\n        log_reg(\"B In\", this.B_reg, 8, this.debug);\n      }\n\n      if (word & this.SIG.OI) {\n        // Output Register In\n        this.OUT_reg = this.BUS;\n        log_reg(\"Out In\", this.OUT_reg, 8, this.debug);\n      }\n\n      if (word & this.SIG.J) {\n        // Jump - Program Counter In\n        this.PC = this.BUS & 15; // Only 4 LSB\n\n        log_reg(\"PC In\", this.PC, 4, this.debug);\n      } // Advance PC on Counter Enable Signal\n\n\n      if (word & this.SIG.CE) {\n        this.PC = this.PC + 1;\n        log_reg(\"Counter Enabled\", this.PC, 4, this.debug);\n      } // Advance Step Counter \n\n\n      this.SC = this.SC + 1 & 7;\n\n      if (word & this.SIG.HLT) {\n        // \n        this.running = false;\n      }\n    }\n  }, {\n    key: \"reset_not_RAM\",\n    value: function reset_not_RAM() {\n      this.PC = 0;\n      this.MAR = 0;\n      this.A_reg = 0;\n      this.B_reg = 0;\n      this.ALU_reg = 0;\n      this.OUT_reg = 0;\n      this.IR = 0;\n      this.SC = 0;\n      this.FLAGS = 0;\n      this.BUS = 0;\n      this.CW = 0;\n    }\n  }]);\n\n  return EightBitComp;\n}();\n\n; // ** Logging functions **\n// Generic Register-Bus Interaction\n\nfunction log_reg(n, r, l, debug) {\n  if (debug) {\n    console.log(\"\\t\" + n + \" \" + r.toString(2).padStart(l, '0'));\n  }\n} // Memory Access\n\n\nfunction log_ma(addy, value, out, debug) {\n  if (debug) {\n    var msg;\n\n    if (out) {\n      msg = \"\\tRAM Out [\";\n    } else {\n      msg = \"\\tRAM In [\";\n    }\n\n    console.log(msg + addy + \"]=\" + value);\n  }\n} // Summarize a tick\n\n\nfunction log_tick(pc, sc, cw, debug) {\n  if (debug) {\n    var msg = \"pc: \" + pc + \" sc: \" + sc + \" cw: \";\n    msg += cw.toString(2).padStart(16, '0');\n    console.log(msg);\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EightBitComp);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/EightBitComp.js?");

/***/ }),

/***/ "./src/js/beebc/Examples.js":
/*!**********************************!*\
  !*** ./src/js/beebc/Examples.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Add42\": () => (/* binding */ Add42),\n/* harmony export */   \"SubTest\": () => (/* binding */ SubTest),\n/* harmony export */   \"AddSub\": () => (/* binding */ AddSub),\n/* harmony export */   \"AddSub_Src\": () => (/* binding */ AddSub_Src),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar Add42 = [20, // LDA [4] - Load from memory at 4\n37, // ADD [5] - Load from memory at 5 into B, put A+B in A\n224, // OUT     - Put A in OR, and Display\n240, // HLT     - Halt\t\t \n14, // [4]     - 14\n28, // [5]     - 28\n0, //\n0, //\t\t \n0, //\n0, //\n0, //\n0, //\t\t\t \t \n0, //\n0, //\n0, //\n0]; //\n\nvar SubTest = [21, // LDA [4] - Load from memory at 5\n52, // SUB [5] - Load from memory at 4 into B, put A-B in A\n224, // OUT     - Put A in OR, and Display\n240, // HLT     - Halt\t\t \n14, // [4]     - 14\n28, // [5]     - 28\n0, //\n0, //\t\t \n0, //\n0, //\n0, //\n0, //\t\t\t \t \n0, //\n0, //\n0, //\n0]; //\n\nvar AddSub = [224, // [00] OUT\n40, // [01] ADD 8\n116, // [02] JC  4\n96, // [03] JMP 0\n56, // [04] SUB 8\n224, // [05] OUT\n128, // [06] JZ  0\n100, // [07]\tJMP 4 \n1, // [08] 1\n0, // [09]\n0, // [10]\t\t\t \t \n0, // [11]\n0, // [12]\n0, // [13]\n0, // [14] \n0]; // [15] \n\nvar AddSub_Src = \"ADD_LOOP\\n  OUT\\n  ADD ONE\\n  JC SUB_LOOP\\n  JMP ADD_LOOP\\nSUB_LOOP\\n  SUB ONE\\n  OUT\\n  JZ ADD_LOOP\\n  JMP SUB_LOOP\\nONE\\n  1\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Add42);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/Examples.js?");

/***/ }),

/***/ "./src/js/beebc/main.js":
/*!******************************!*\
  !*** ./src/js/beebc/main.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EightBitComp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EightBitComp.js */ \"./src/js/beebc/EightBitComp.js\");\n/* harmony import */ var _EBCGUI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EBCGUI.js */ \"./src/js/beebc/EBCGUI.js\");\n/* harmony import */ var _Assembler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Assembler.js */ \"./src/js/beebc/Assembler.js\");\n/* harmony import */ var _Examples_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Examples.js */ \"./src/js/beebc/Examples.js\");\n\n\n\n\nvar ebc = new _EightBitComp_js__WEBPACK_IMPORTED_MODULE_0__.default();\nvar ebc_gui = new _EBCGUI_js__WEBPACK_IMPORTED_MODULE_1__.default();\nvar ass = new _Assembler_js__WEBPACK_IMPORTED_MODULE_2__.default();\nvar DELAY = 5;\nvar running = false;\nvar timer; // **** BUTTONS ****\n// Advance Clock One Tick - The 'Step' button\n\nfunction step() {\n  ebc.tick();\n  ebc_gui.update_elements(ebc);\n}\n\nvar btn_step = document.getElementById('clk_step');\nbtn_step.onclick = step; // Start/Stop the clock - \"play/pause\" button\n\nfunction startstop() {\n  if (running) {\n    running = false;\n    clearTimeout(timer);\n  } else {\n    running = true;\n    timer = setInterval(step, DELAY);\n  }\n}\n\nvar btn_ss = document.getElementById('clk_start');\nbtn_ss.onclick = startstop; // Reset - Clear everything but the RAM\n\nfunction reset() {\n  ebc.reset_not_RAM();\n  ebc_gui.update_elements(ebc);\n}\n\nvar btn_rs = document.getElementById('reset');\nbtn_rs.onclick = reset; // Process Code in Assembler Area\n\nfunction assemble() {\n  src = ass_txt.value;\n  res = ass.assemble(src); // Will return an object, so I can pass a\n  // error code if needed. \n\n  if (res[0] == 0) {\n    // Error code of 0 == no error\n    ebc.RAM = res[1]; // Means we can safely dump result into ram.\n  } else {\n    console.log(\"Error in assembly: \" + res[0]);\n  }\n\n  ebc_gui.update_elements(ebc);\n  return false;\n}\n\nvar ass_txt = document.getElementById('ass_in');\nvar form_ass = document.getElementById('ass_form');\nform_ass.onsubmit = assemble; // *** Memory Editing\n\nvar mems_dsp = [16];\nvar mems_inp = [16];\nvar mems_btn = [16];\nvar idx;\n\nfor (var i = 0; i < 16; i++) {\n  idx = i.toString(2).padStart(4, '0');\n  mems_dsp[i] = document.getElementById('m' + idx);\n  mems_inp[i] = document.getElementById('i' + idx);\n  mems_btn[i] = document.getElementById('b' + idx);\n}\n\nfunction edit_mem() {\n  var i = parseInt(this.id.substring(1), 2);\n  mems_dsp[i].classList.add(\"hidden\");\n  mems_inp[i].classList.remove(\"hidden\");\n  mems_btn[i].classList.remove(\"hidden\");\n  mems_inp[i].value = ebc.RAM[i].toString(2).padStart(8, '0');\n}\n\nfunction save_mem() {\n  var i = parseInt(this.id.substring(1), 2);\n  ebc.RAM[i] = parseInt(mems_inp[i].value, 2);\n  mems_dsp[i].innerHTML = ebc_gui.format_register_html(ebc.RAM[i].toString(2), 8, true);\n  mems_dsp[i].classList.remove(\"hidden\");\n  mems_inp[i].classList.add(\"hidden\");\n  mems_btn[i].classList.add(\"hidden\");\n}\n\nfor (var i = 0; i < 16; i++) {\n  mems_dsp[i].onclick = edit_mem;\n  mems_btn[i].onclick = save_mem;\n} // Load some initial code. \n\n\nebc.RAM = _Examples_js__WEBPACK_IMPORTED_MODULE_3__.AddSub;\nass_txt.value = _Examples_js__WEBPACK_IMPORTED_MODULE_3__.AddSub_Src;\nebc_gui.update_elements(ebc);\n\n//# sourceURL=webpack://powcraft/./src/js/beebc/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/beebc/main.js");
/******/ 	
/******/ })()
;